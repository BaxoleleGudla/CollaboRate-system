<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>416, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gd6QyyiJEyC1gAAAABJRU5ErkJggg==
</value>
  </data>
</root>