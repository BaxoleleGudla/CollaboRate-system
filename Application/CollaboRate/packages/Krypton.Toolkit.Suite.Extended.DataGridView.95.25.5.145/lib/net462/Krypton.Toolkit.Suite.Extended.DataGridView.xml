<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Krypton.Toolkit.Suite.Extended.DataGridView</name>
    </assembly>
    <members>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.MasterMultiDetailView">
            <summary>
            This is a MasterDetail DataGridView that allows a multiple detail block to be displayed under each master row
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterMultiDetailView.AddMultiDetail(System.String,System.String,System.String,System.Windows.Forms.DataGridViewColumn[])">
            <summary>
            Add Detail Grid View tab 
            </summary>
            <param name="tableName"></param>
            <param name="targetKeyColumn"></param>
            <param name="tabPageCaption"></param>
            <param name="columns">optional columns if not already added via designer</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterMultiDetailView.AddMultiDetail(System.ComponentModel.IBindingListView,System.String,System.String,System.Windows.Forms.DataGridViewColumn[])">
            <summary>
            Adds a dataSource type to the Child Detail View
            </summary>
            <param name="source"></param>
            <param name="targetKeyColumn">The foreign key fieldname to be used for the master -> child relationship</param>
            <param name="tabPageCaption">The caption text of the current tab page.</param>
            <param name="columns">optional columns if not already added via designer</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.MasterSingleDetailView">
            <summary>
            This is a MasterDetail DataGridView that allows a single detail block to be displayed under each master row
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterSingleDetailView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterSingleDetailView.AddSingleDetail(System.String,System.String,System.Windows.Forms.DataGridViewColumn[])">
            <summary>
            Add the tableName to be used for the Details from within the DataSource
            </summary>
            <param name="tableName"></param>
            <param name="targetKeyColumn"></param>
            <param name="columns">optional columns if not already added via designer</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterSingleDetailView.AddSingleDetail(System.ComponentModel.IBindingListView,System.String,System.Windows.Forms.DataGridViewColumn[])">
            <summary>
            Adds a dataSource type to the Child Detail View
            </summary>
            <param name="source"></param>
            <param name="targetKeyColumn">The foreign key fieldname to be used for the master -> child relationship</param>
            <param name="columns">optional columns if not already added via designer</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1">
            <summary>
            Stolen from here https://docs.microsoft.com/en-gb/archive/blogs/winformsue/filtering-code
            and then modified to follow coding standards and fix subsequent filtering
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SupportsSearchingCore">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SupportsSortingCore">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.IsSortedCore">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SortPropertyCore">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SortDirectionCore">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.RemoveSortCore">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.RemoveSort">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.EndNew(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SupportsAdvancedSorting">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SortDescriptions">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.SupportsFiltering">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.RemoveFilter">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.FilterPropertyName">
            <summary>
            Should be in the format columnName ='desiredValue'
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SimpleFilteredList`1.Filter">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SingleDetailView.ChildGrids">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SingleDetailView.DetailsCurrentCell">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.SingleDetailView.DetailsCurrentRow">
            <inheritdoc />
        </member>
        <member name="E:Krypton.Toolkit.Suite.Extended.DataGridView.SingleDetailView.DetailsCellMouseClick">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterMultiDetailViewDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonWrapLabelDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterSingleDetailViewDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonWrapLabelDesigner class.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.EnumConditionalFormatType">
            <summary>
            Conditional Formatting type
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.EnumConditionalFormatType.TwoColoursRange">
            <summary>
            Two scale color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.EnumConditionalFormatType.ThreeColoursRange">
            <summary>
            Three scale color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.EnumConditionalFormatType.Bar">
            <summary>
            Bar
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper">
            <summary>
            Helper for color manipulations
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSVColour">
            <summary>
            HSV Structure
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSVColour.Hue">
            <summary>
            Hue value, from 0° to 360°
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSVColour.Saturation">
            <summary>
            Saturation value, from 0 to 1
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSVColour.ValueOrBrightness">
            <summary>
            Value or Brightness value, from 0 to 1
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSVColour.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSVColour"/> struct.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSLColour">
            <summary>
            HSL Structure
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSLColour.Hue">
            <summary>
            Hue value, from 0° to 360°
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSLColour.Saturation">
            <summary>
            Saturation value, from 0 to 1
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSLColour.Lightness">
            <summary>
            Value or Lightness value, from 0 to 1
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSLColour.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.HSLColour"/> struct.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="lightness">The lightness.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.FromHSV(System.Single,System.Single,System.Single)">
            <summary>
            Returns a System.Color from HSL values
            </summary>
            <param name="h">Hue (0 to 360°)</param>
            <param name="s">Saturation (0 to 1)</param>
            <param name="v">Value/Brightness (0 to 1)</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.ToHSV(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns HSV values from RGB
            </summary>
            <param name="red">Red component from 0 to 255</param>
            <param name="green">Green component from 0 to 255</param>
            <param name="blue">Blue component from 0 to 255</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.FromHSL(System.Single,System.Single,System.Single)">
            <summary>
            Returns a System.Color from HSL values
            </summary>
            <param name="h">Hue (0 to 360°)</param>
            <param name="s">Saturation (0 to 1)</param>
            <param name="l">Lightness (0 to 1)</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ColourHelper.ToHSL(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns HSL values from RGB
            </summary>
            <param name="red">Red component from 0 to 255</param>
            <param name="green">Green component from 0 to 255</param>
            <param name="blue">Blue component from 0 to 255</param>
            <returns></returns>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting">
            <summary>
            Conditional Formatting class
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>
            The name of the column.
            </value>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.FormatType">
            <summary>
            Gets or sets the type of the Conditional Formatting.
            </summary>
            <value>
            The type of the Conditional Formatting.
            </value>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.FormatParams">
            <summary>
            Gets or sets the Conditional Formatting parameters.
            </summary>
            <value>
            The Conditional Formatting parameters.
            </value>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.minValue">
            <summary>
            Gets or sets the minimum value.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.maxValue">
            <summary>
            Gets or sets the maximum value.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting"/> class.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.#ctor(Krypton.Toolkit.Suite.Extended.DataGridView.EnumConditionalFormatType,Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting"/> class. (Only use for context menu !)
            </summary>
            <param name="formatType">Type of the Conditional Formatting.</param>
            <param name="formatParams">The Conditional Formatting parameters.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting.#ctor(System.String,Krypton.Toolkit.Suite.Extended.DataGridView.EnumConditionalFormatType,Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.ConditionalFormatting"/> class.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="formatType">Type of the Conditional Formatting.</param>
            <param name="formatParams">The Conditional Formatting parameters.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer">
            <summary>
            Displays byte arrays in hexadecimal, ANSI, and Unicode formats.
            </summary>
            <remarks>
            This is based off <see cref="T:System.ComponentModel.Design.ByteViewer"/> with a couple
            of cosmetic changes to make it look at least a little less Win3.11-ish.
            </remarks>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.VScrollBarEx">
            <summary>
            VScrollBar is a simple wrapper for the ancient WINAPI scrollbar from the early
            90s which has the annoying property of blinking like a cursor when selected. I don't
            know why they thought this was a good idea because it looks ridiculous and there is
            not even a way to turn it off, so we need to work around it as so often with WinForms.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.#ctor">
            <summary>
            Initializes a new instance of the ByteViewer class.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <param name="e">
            A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
            </param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the panel.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <param name="e">
            A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.
            </param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
            <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.ScrollChanged(System.Object,System.EventArgs)">
            <summary>Handles the <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> event on the <see cref="T:System.ComponentModel.Design.ByteViewer" /> control's <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
            <param name="source">The source of the event. </param>
            <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.GetBytes">
            <summary>Gets the bytes in the buffer.</summary>
            <returns>The unsigned byte array reference.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.GetDisplayMode">
            <summary>Gets the display mode for the control.</summary>
            <returns>The display mode that this control uses. The returned value is defined in <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.SaveToFile(System.String)">
            <summary>Writes the raw data from the data buffer to a file.</summary>
            <param name="path">The file path to save to. </param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="path" /> is null. </exception>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.IO.IOException">The file write failed. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.SetBytes(System.Byte[])">
            <summary>Sets the byte array to display in the viewer.</summary>
            <param name="bytes">The byte array to display. </param>
            <exception cref="T:System.ArgumentNullException">The specified byte array is null. </exception>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
            <summary>Sets the current display mode.</summary>
            <param name="mode">The display mode to set. </param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified display mode is not from the <see cref="T:System.ComponentModel.Design.DisplayMode" /> enumeration. </exception>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.SetFile(System.String)">
            <summary>Sets the file to display in the viewer.</summary>
            <param name="path">The file path to load from. </param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="path" /> is null. </exception>
            <exception cref="T:System.ArgumentException">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.IO.IOException">The file load failed. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonByteViewer.SetStartLine(System.Int32)">
            <summary>Sets the current line for the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> view.</summary>
            <param name="line">The current line to display from. </param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams">
            <summary>
            Parameters for Bar formatting
            </summary>
            <seealso cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams" />
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams.BarColour">
            <summary>
            The bar color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams.GradientFill">
            <summary>
            The gradient fill
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams.ProportionValue">
            <summary>
            The proportion value
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams.#ctor(System.Drawing.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams"/> class.
            </summary>
            <param name="barColour">Color of the bar.</param>
            <param name="gradientFill">if set to <c>true</c> [gradient fill].</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams.Clone">
            <summary>
            Crée un objet qui est une copie de l'instance actuelle.
            </summary>
            <returns>
            Nouvel objet qui est une copie de cette instance.
            </returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.BarParams.Krypton#Toolkit#Suite#Extended#DataGridView#IFormatParams#Persist(System.Xml.XmlWriter)">
            <summary>
            Persists the parameters.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams">
            <summary>
            Three scale color class parameters
            </summary>
            <seealso cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams" />
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.MinimumColour">
            <summary>
            The minimum color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.MediumColour">
            <summary>
            The medium color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.MaximumColour">
            <summary>
            The maximum color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.ValueColour">
            <summary>
            The color associated to the value
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams"/> class.
            </summary>
            <param name="minColour">The minimum color.</param>
            <param name="mediumColour">Color of the medium.</param>
            <param name="maxColour">The maximum color.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.Clone">
            <summary>
            Crée un objet qui est une copie de l'instance actuelle.
            </summary>
            <returns>
            Nouvel objet qui est une copie de cette instance.
            </returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.ThreeColoursParams.Krypton#Toolkit#Suite#Extended#DataGridView#IFormatParams#Persist(System.Xml.XmlWriter)">
            <summary>
            Persists the parameters.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams">
            <summary>
            Two scale color class parameters
            </summary>
            <seealso cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams" />
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams.MinimumColour">
            <summary>
            Minimum color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams.MaximumColour">
            <summary>
            Maximum color
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams.ValueColour">
            <summary>
            Color associated to the value between min and max color
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams"/> class.
            </summary>
            <param name="minColour">The minimum color.</param>
            <param name="maxColour">The maximum color.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams.Clone">
            <summary>
            Crée un objet qui est une copie de l'instance actuelle.
            </summary>
            <returns>
            Nouvel objet qui est une copie de cette instance.
            </returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TwoColoursParams.Persist(System.Xml.XmlWriter)">
            <summary>
            Persists the parameters.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams">
            <summary>
            Parameter class for Conditional Formatting
            </summary>
            <seealso cref="T:System.ICloneable" />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.IFormatParams.Persist(System.Xml.XmlWriter)">
            <summary>
            Persists the parameters.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell">
            <summary>
            Displays viewable binary information in a KryptonDataGridView control.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.Clone">
            <summary>
            Creates an exact copy of this cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.EditorType">
            <summary>
            Gets or sets the type of the editor-widget to use. If this is null, the default editor will be used-
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Customized implementation of the GetFormattedValue function in order to include  the decimal and thousand separator 
            characters in the formatted representation of the cell value.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Called when the cell is clicked.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewBinaryCell cells.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewCustomColumn class.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.SortMode">
            <summary>
            Gets or sets the sort mode for the column.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.CellTemplate">
            <summary>
            Gets or sets the template used to model cell appearance.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewBinaryColumn.EditorType">
            <summary>
            Replicates the EditorType property of the KryptonDataGridViewBinaryCell cell type.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewFormattingColumn">
            <summary>
            Class for a KryptonDataGridViewFormattingColumn : KryptonDataGridViewTextBoxColumn with conditional formatting abilities
            </summary>
            <seealso cref="T:Krypton.Toolkit.KryptonDataGridViewTextBoxColumn" />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewFormattingColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewFormattingColumn"/> class.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewFormattingColumn.ContrastTextColour">
            <summary>
            Gets or sets a value indicating whether [contrast text color].
            </summary>
            <value>
              <c>true</c> if [contrast text color]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.FormattingCell">
            <summary>
            Formatting cell
            </summary>
            <seealso cref="T:Krypton.Toolkit.KryptonDataGridViewTextBoxCell" />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.FormattingCell.FormatType">
            <summary>
            Gets or sets the type of the format.
            </summary>
            <value>
            The type of the format.
            </value>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.FormattingCell.FormatParams">
            <summary>
            Gets or sets the format parameters.
            </summary>
            <value>
            The format parameters.
            </value>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.FormattingCell.ContrastColour(System.Drawing.Color)">
            <summary>
            Contrasts the color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.FormattingCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Paints the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="clipBounds">The clip bounds.</param>
            <param name="cellBounds">The cell bounds.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="cellState">State of the cell.</param>
            <param name="value">The value.</param>
            <param name="formattedValue">The formatted value.</param>
            <param name="errorText">The error text.</param>
            <param name="cellStyle">The cell style.</param>
            <param name="advancedBorderStyle">The advanced border style.</param>
            <param name="paintParts">The paint parts.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewPercentageColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewPercentageColumn cells.
            </summary>
            <seealso cref="T:System.Windows.Forms.DataGridViewColumn" />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewPercentageColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewPercentageColumn class.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewPercentageColumn.ToString">
            <summary>
            Returns a standard compact string representation of the column.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewPercentageColumn.CellTemplate">
            <summary>
            Overrides CellTemplate
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.DataGridViewPercentageCell">
            <summary>
            Class for a DataGridViewPercentageCell
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.DataGridViewPercentageCell.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.DataGridViewPercentageCell.EditType">
            <summary>
            Specify the type of object used for editing. This is how the WinForms
            framework figures out what type of edit control to make.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.DataGridViewPercentageCell.ValueType">
            <summary>
            Overrides TypeValue
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.DataGridViewPercentageCell.DefaultNewRowValue">
            <summary>
            Specify the default cell contents upon creation of a new cell.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.DataGridViewPercentageCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Overrides Paint
            </summary>
            <param name="graphics"></param>
            <param name="clipBounds"></param>
            <param name="cellBounds"></param>
            <param name="rowIndex"></param>
            <param name="cellState"></param>
            <param name="value"></param>
            <param name="formattedValue"></param>
            <param name="errorText"></param>
            <param name="cellStyle"></param>
            <param name="advancedBorderStyle"></param>
            <param name="paintParts"></param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.PercentageEditingControl">
            <summary>
            Public class for the underlying editing control
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.PercentageEditingControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.PercentageEditingControl.IsValidForNumberInput(System.Char)">
            <summary>
            Returns if the character is a valid digit
            </summary>
            <param name="c">The character.</param>
            <returns>True if valid digit, false otherwise.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.PercentageEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Overrides onKeypPress
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewRatingColumn">
            <summary>
            Class for a rating column
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewRatingColumn.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell">
            <summary>
            Class for a rating celle
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Overrides GetFormattedValue
            </summary>
            <param name="value"></param>
            <param name="rowIndex"></param>
            <param name="cellStyle"></param>
            <param name="valueTypeConverter"></param>
            <param name="formattedValueTypeConverter"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.DefaultNewRowValue">
            <summary>
            Overrides DefaultNewRowValue
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Overrides Paint
            </summary>
            <param name="graphics"></param>
            <param name="clipBounds"></param>
            <param name="cellBounds"></param>
            <param name="rowIndex"></param>
            <param name="elementState"></param>
            <param name="value"></param>
            <param name="formattedValue"></param>
            <param name="errorText"></param>
            <param name="cellStyle"></param>
            <param name="advancedBorderStyle"></param>
            <param name="paintParts"></param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Update cell's value when the user clicks on a star 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.OnMouseLeave(System.Int32)">
            <summary>
            Overrides OnMouseLeave
            </summary>
            <param name="rowIndex">the row that contains the cell.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.RatingCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Overrides OnMouseMove
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewTextAndImageCell cells.
            </summary>
        </member>
        <member name="E:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewTextBoxColumn class.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.MaxInputLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the text box.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.SortMode">
            <summary>
            Gets or sets the sort mode for the column.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.CellTemplate">
            <summary>
            Gets or sets the template used to model cell appearance.
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage">
            <summary>
            Class for TextAndImage object
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.Image">
            <summary>
            The image
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.#ctor(System.String,System.Drawing.Image)">
            <summary>
            Constructor
            </summary>
            <param name="text">The text.</param>
            <param name="img">The image.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.ToString">
            <summary>
            Overrides ToString
            </summary>
            <returns>String that represents TextAndImage</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.Equals(System.Object)">
            <summary>
            Overrides Equals
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if equal, false otherwise.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.GetHashCode">
            <summary>
            Overrides GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage.CompareTo(Krypton.Toolkit.Suite.Extended.DataGridView.TextAndImage)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell">
            <summary>
            Class for a TextAndImage cell
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell.ValueType">
            <summary>
            Overrides ValueType
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell.SetValue(System.Int32,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell.Clone">
            <summary>
            Overrides Clone
            </summary>
            <returns>The cloned KryptonDataGridViewTextAndImageCell</returns>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTextAndImageCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Overrides Paint
            </summary>
            <param name="graphics"></param>
            <param name="clipBounds"></param>
            <param name="cellBounds"></param>
            <param name="rowIndex"></param>
            <param name="cellState"></param>
            <param name="value"></param>
            <param name="formattedValue"></param>
            <param name="errorText"></param>
            <param name="cellStyle"></param>
            <param name="advancedBorderStyle"></param>
            <param name="paintParts"></param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.Token">
            <summary>
            Token object
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.Token.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.Token.#ctor(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Constructor
            </summary>
            <param name="text">Text of the token</param>
            <param name="bg">Background color</param>
            <param name="fg">Foreground text color</param>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.Token.Text">
            <summary>
            Text of the token
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.Token.BackColour">
            <summary>
            Background color
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.Token.ForeColour">
            <summary>
            Foreground text color
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.Token.CompareTo(Krypton.Toolkit.Suite.Extended.DataGridView.Token)">
            <summary>
            Compare a Token to another
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.Token.ToString">
            <summary>
            Overrides ToString
            </summary>
            <returns>String that represents TextAndImage</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.Token.Equals(System.Object)">
            <summary>
            Overrides Equals
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if equal, false otherwise.</returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.Token.GetHashCode">
            <summary>
            Overrides GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell">
            <summary>
            Class for a Token cell
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Overrides Paint
            </summary>
            <param name="graphics"></param>
            <param name="clipBounds"></param>
            <param name="cellBounds"></param>
            <param name="rowIndex"></param>
            <param name="elementState"></param>
            <param name="value"></param>
            <param name="formattedValue"></param>
            <param name="errorText"></param>
            <param name="cellStyle"></param>
            <param name="advancedBorderStyle"></param>
            <param name="paintParts"></param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Overrides GetPreferredSize
            </summary>
            <param name="graphics"></param>
            <param name="cellStyle"></param>
            <param name="rowIndex"></param>
            <param name="constraintSize"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Update cell's value when the user clicks on a star 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.OnMouseLeave(System.Int32)">
            <summary>
            Overrides OnMouseLeave
            </summary>
            <param name="rowIndex">the row that contains the cell.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Overrides OnMouseMove
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell">
            <summary>
            Class for a rating celle
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Overrides Paint
            </summary>
            <param name="graphics"></param>
            <param name="clipBounds"></param>
            <param name="cellBounds"></param>
            <param name="rowIndex"></param>
            <param name="elementState"></param>
            <param name="value"></param>
            <param name="formattedValue"></param>
            <param name="errorText"></param>
            <param name="cellStyle"></param>
            <param name="advancedBorderStyle"></param>
            <param name="paintParts"></param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Overrides GetPreferredSize
            </summary>
            <param name="graphics"></param>
            <param name="cellStyle"></param>
            <param name="rowIndex"></param>
            <param name="constraintSize"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Update cell's value when the user clicks on a star 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell.OnMouseLeave(System.Int32)">
            <summary>
            Overrides OnMouseLeave
            </summary>
            <param name="rowIndex">the row that contains the cell.</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.TokenListCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Overrides OnMouseMove
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTokenColumn">
            <summary>
            Class for a rating column
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTokenColumn.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTokenListColumn">
            <summary>
            Class for a rating column
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.KryptonDataGridViewTokenListColumn.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.IDetailView`1.ChildGrids">
            <summary>
            Link the TargetKeyColumn to the gridView
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.IDetailView`1.DetailsCurrentCell">
            <summary>
            The current active Details View cell
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.IDetailView`1.DetailsCurrentRow">
            <summary>
            Current active Details View row
            </summary>
        </member>
        <member name="E:Krypton.Toolkit.Suite.Extended.DataGridView.IDetailView`1.DetailsCellMouseClick">
            <summary>
            Route the Details mouse click through to the 
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridView`1">
            <summary>
            DO NOT use in your application code base: This is a base class to allows pass-through to the master KryptonDataGridView
            </summary>
            <remarks>
            Abstract implementation class to allow access to the Control Constraint here only.
            </remarks>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridView`1.DetailsCurrentCell">
            <summary>
            The current active Details View cell
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridView`1.DetailsCurrentRow">
            <summary>
            Current active Details View row
            </summary>
        </member>
        <member name="E:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridView`1.DetailsCellMouseClick">
            <summary>
            Route the Details mouse click through to the 
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase">
            <summary>
            DO NOT use in your application code base: This is a base class to allows passthrough
            Class to hold the image list resource
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.DataSet">
            <summary>
            Required to allow Master Detail relationships
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.DataSource">
            <inheritdoc />
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.SetMasterSource(System.String,System.String,System.Windows.Forms.DataGridViewColumn[])">
            <summary>
            Specify which table is to be used for the master from within the Dataset
            </summary>
            <param name="tableName"></param>
            <param name="masterColumn">The foreign key fieldname to be used for the master -> child relationship</param>
            <param name="columns">optional columns if not already added via designer</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.SetMasterSource(System.Windows.Forms.BindingSource,System.String,System.Windows.Forms.DataGridViewColumn[])">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="masterColumn">The foreign key fieldname to be used for the master -> child relationship</param>
            <param name="columns">optional columns if not already added via designer</param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.SetStyles(Krypton.Toolkit.KryptonDataGridView)">
            <summary>
            Align the styles of the Child Detail views with the Master.
            This saves having to combine designers for the same look'n'feel
            </summary>
            <param name="newGrid"></param>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.DetailsColumnHeadersVisible">
            <summary>
            Detail DataGridView ColumnHeaders Visibility
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.ExpandDetailsWhenFullRowSelectClicked">
            <summary>
            Detail DataGridView ColumnHeaders Visibility
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.DetailsRowHeadersVisible">
            <summary>
            Detail DataGridView RowHeaders Visibility
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.DetailRowExpandedMaxHeight">
            <summary>
            Detail DataGridView RowHeaders Visibility
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.RowHeadersVisible">
            <summary>
            Override the Master RowHeaders to be always visible
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MasterDetailGridViewBase.RowHeadersWidth">
            <summary>
            Make sure the RowHeaders have enough room to display the Drop restore image
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.Suite.Extended.DataGridView.MultiDetailView">
            <summary>
            TODO: use Krypton.Navigator
            </summary>
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MultiDetailView.ChildGrids">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MultiDetailView.DetailsCurrentCell">
            <inheritdoc />
        </member>
        <member name="P:Krypton.Toolkit.Suite.Extended.DataGridView.MultiDetailView.DetailsCurrentRow">
            <inheritdoc />
        </member>
        <member name="E:Krypton.Toolkit.Suite.Extended.DataGridView.MultiDetailView.DetailsCellMouseClick">
            <inheritdoc />
        </member>
        <member name="T:System.Runtime.CompilerServices.ITuple">
            <summary>
            This interface is required for types that want to be indexed into by dynamic patterns.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.ITuple.Length">
            <summary>
            The number of positions in this data structure.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)">
            <summary>
            Get the element at position <param name="index"/>.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.TupleElementNamesAttribute">
            <summary>
            Indicates that the use of <see cref="T:System.ValueTuple" /> on a member is meant to be treated as a tuple with element names.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames">
            <summary>
            Specifies, in a pre-order depth-first traversal of a type's
            construction, which <see cref="T:System.ValueTuple" /> elements are
            meant to carry element names.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.TupleElementNamesAttribute" /> class.
            </summary>
            <param name="transformNames">
            Specifies, in a pre-order depth-first traversal of a type's
            construction, which <see cref="T:System.ValueTuple" /> occurrences are
            meant to carry element names.
            </param>
            <remarks>
            This constructor is meant to be used on types that contain an
            instantiation of <see cref="T:System.ValueTuple" /> that contains
            element names.  For instance, if <c>C</c> is a generic type with
            two type parameters, then a use of the constructed type <c>C{<see cref="T:System.ValueTuple`2" />, <see cref="T:System.ValueTuple`3" /></c> might be intended to
            treat the first type argument as a tuple with element names and the
            second as a tuple without element names. In which case, the
            appropriate attribute specification should use a
            <c>transformNames</c> value of <c>{ "name1", "name2", null, null,
            null }</c>.
            </remarks>
        </member>
        <member name="T:System.IValueTupleInternal">
            <summary>
            Helper so we can call some tuple methods recursively without knowing the underlying types.
            </summary>
        </member>
        <member name="T:System.ValueTuple">
            <summary>
            The ValueTuple types (from arity 0 to 8) comprise the runtime implementation that underlies tuples in C# and struct tuples in F#.
            Aside from created via language syntax, they are most easily created via the ValueTuple.Create factory methods.
            The System.ValueTuple types differ from the System.Tuple types in that:
            - they are structs rather than classes,
            - they are mutable rather than readonly, and
            - their members (such as Item1, Item2, etc) are fields rather than properties.
            </summary>
        </member>
        <member name="M:System.ValueTuple.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current <see cref="T:System.ValueTuple"/> instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:System.ValueTuple"/>.</returns>
        </member>
        <member name="M:System.ValueTuple.Equals(System.ValueTuple)">
            <summary>Returns a value indicating whether this instance is equal to a specified value.</summary>
            <param name="other">An instance to compare to this instance.</param>
            <returns>true if <paramref name="other"/> has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:System.ValueTuple.CompareTo(System.ValueTuple)">
            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>
            <param name="other">An instance to compare.</param>
            <returns>
            A signed number indicating the relative values of this instance and <paramref name="other"/>.
            Returns less than zero if this instance is less than <paramref name="other"/>, zero if this
            instance is equal to <paramref name="other"/>, and greater than zero if this instance is greater
            than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:System.ValueTuple.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.ValueTuple.ToString">
            <summary>
            Returns a string that represents the value of this <see cref="T:System.ValueTuple"/> instance.
            </summary>
            <returns>The string representation of this <see cref="T:System.ValueTuple"/> instance.</returns>
            <remarks>
            The string returned by this method takes the form <c>()</c>.
            </remarks>
        </member>
        <member name="P:System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length">
            <summary>
            The number of positions in this data structure.
            </summary>
        </member>
        <member name="P:System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
            <summary>
            Get the element at position <param name="index"/>.
            </summary>
        </member>
        <member name="M:System.ValueTuple.Create">
            <summary>Creates a new struct 0-tuple.</summary>
            <returns>A 0-tuple.</returns>
        </member>
        <member name="M:System.ValueTuple.Create``2(``0,``1)">
            <summary>Creates a new struct 2-tuple, or pair.</summary>
            <typeparam name="T1">The type of the first component of the tuple.</typeparam>
            <typeparam name="T2">The type of the second component of the tuple.</typeparam>
            <param name="item1">The value of the first component of the tuple.</param>
            <param name="item2">The value of the second component of the tuple.</param>
            <returns>A 2-tuple (pair) whose value is (item1, item2).</returns>
        </member>
        <member name="T:System.ValueTuple`2">
            <summary>
            Represents a 2-tuple, or pair, as a value type.
            </summary>
            <typeparam name="T1">The type of the tuple's first component.</typeparam>
            <typeparam name="T2">The type of the tuple's second component.</typeparam>
        </member>
        <member name="F:System.ValueTuple`2.Item1">
            <summary>
            The current <see cref="T:System.ValueTuple`2"/> instance's first component.
            </summary>
        </member>
        <member name="F:System.ValueTuple`2.Item2">
            <summary>
            The current <see cref="T:System.ValueTuple`2"/> instance's first component.
            </summary>
        </member>
        <member name="M:System.ValueTuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ValueTuple`2"/> value type.
            </summary>
            <param name="item1">The value of the tuple's first component.</param>
            <param name="item2">The value of the tuple's second component.</param>
        </member>
        <member name="M:System.ValueTuple`2.Equals(System.Object)">
             <summary>
             Returns a value that indicates whether the current <see cref="T:System.ValueTuple`2"/> instance is equal to a specified object.
             </summary>
             <param name="obj">The object to compare with this instance.</param>
             <returns><see langword="true"/> if the current instance is equal to the specified object; otherwise, <see langword="false"/>.</returns>
            
             <remarks>
             The <paramref name="obj"/> parameter is considered to be equal to the current instance under the following conditions:
             <list type="bullet">
                 <item><description>It is a <see cref="T:System.ValueTuple`2"/> value type.</description></item>
                 <item><description>Its components are of the same types as those of the current instance.</description></item>
                 <item><description>Its components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.</description></item>
             </list>
             </remarks>
        </member>
        <member name="M:System.ValueTuple`2.Equals(System.ValueTuple{`0,`1})">
            <summary>
            Returns a value that indicates whether the current <see cref="T:System.ValueTuple`2"/> instance is equal to a specified <see cref="T:System.ValueTuple`2"/>.
            </summary>
            <param name="other">The tuple to compare with this instance.</param>
            <returns><see langword="true"/> if the current instance is equal to the specified tuple; otherwise, <see langword="false"/>.</returns>
            <remarks>
            The <paramref name="other"/> parameter is considered to be equal to the current instance if each of its fields
            are equal to that of the current instance, using the default comparer for that field's type.
            </remarks>
        </member>
        <member name="M:System.ValueTuple`2.CompareTo(System.ValueTuple{`0,`1})">
            <summary>Compares this instance to a specified instance and returns an indication of their relative values.</summary>
            <param name="other">An instance to compare.</param>
            <returns>
            A signed number indicating the relative values of this instance and <paramref name="other"/>.
            Returns less than zero if this instance is less than <paramref name="other"/>, zero if this
            instance is equal to <paramref name="other"/>, and greater than zero if this instance is greater
            than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:System.ValueTuple`2.GetHashCode">
            <summary>
            Returns the hash code for the current <see cref="T:System.ValueTuple`2"/> instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.ValueTuple`2.ToString">
            <summary>
            Returns a string that represents the value of this <see cref="T:System.ValueTuple`2"/> instance.
            </summary>
            <returns>The string representation of this <see cref="T:System.ValueTuple`2"/> instance.</returns>
            <remarks>
            The string returned by this method takes the form <c>(Item1, Item2)</c>,
            where <c>Item1</c> and <c>Item2</c> represent the values of the <see cref="F:System.ValueTuple`2.Item1"/>
            and <see cref="F:System.ValueTuple`2.Item2"/> fields. If either field value is <see langword="null"/>,
            it is represented as <see cref="F:System.String.Empty"/>.
            </remarks>
        </member>
        <member name="P:System.ValueTuple`2.System#Runtime#CompilerServices#ITuple#Length">
            <summary>
            The number of positions in this data structure.
            </summary>
        </member>
        <member name="P:System.ValueTuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
            <summary>
            Get the element at position <param name="index"/>.
            </summary>
        </member>
    </members>
</doc>
